One form of a wavefront computation is a matrix where each element is defined as some function of the element to the left and to the top of it. If there is no element to the top, the the element is defined by a function of the element to the left. Likewise, if there is no element to the left, the element is defined only by a function of the element to the top. Thus, a wavefront computed matrix can be defines as follows:

W[0, 0] = constant
W[x, 0] = f(W[x-1, 0], 0) if x > 0
W[0, y] = f(0, W[0, y – 1]) if y > 0
W[x, y] = f(W[x-1, y], W[x, y-1]) if ((x > 0) && (y > 0))

Since W[2, 2] depends on W[2,1] and W[1,2], W[2,2] cannot be computed until W[2,1] and W[2,2] are computed. Thus, the computation travels in a “wavefront” which is a diagonal along the matrix.

The code here use shared memory to solve the problem

Compile in Ubuntu using command 
